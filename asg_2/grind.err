==4352== Memcheck, a memory error detector
==4352== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==4352== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==4352== Command: ./yshell
==4352== 
yshell: Bad: no such function
==4352== 
==4352== HEAP SUMMARY:
==4352==     in use at exit: 1,478 bytes in 33 blocks
==4352==   total heap usage: 292 allocs, 259 frees, 10,723 bytes allocated
==4352== 
==4352== 1,478 (48 direct, 1,430 indirect) bytes in 1 blocks are definitely lost in loss record 11 of 11
==4352==    at 0x4C2A1E3: operator new(unsigned long) (vg_replace_malloc.c:334)
==4352==    by 0x40F2DE: __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<inode, std::allocator<inode>, (__gnu_cxx::_Lock_policy)2> >::allocate(unsigned long, void const*) (new_allocator.h:111)
==4352==    by 0x40EE94: std::allocator_traits<std::allocator<std::_Sp_counted_ptr_inplace<inode, std::allocator<inode>, (__gnu_cxx::_Lock_policy)2> > >::allocate(std::allocator<std::_Sp_counted_ptr_inplace<inode, std::allocator<inode>, (__gnu_cxx::_Lock_policy)2> >&, unsigned long) (alloc_traits.h:436)
==4352==    by 0x40E575: std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<inode, std::allocator<inode>, (__gnu_cxx::_Lock_policy)2> > > std::__allocate_guarded<std::allocator<std::_Sp_counted_ptr_inplace<inode, std::allocator<inode>, (__gnu_cxx::_Lock_policy)2> > >(std::allocator<std::_Sp_counted_ptr_inplace<inode, std::allocator<inode>, (__gnu_cxx::_Lock_policy)2> >&) (allocated_ptr.h:104)
==4352==    by 0x40DB19: std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<inode, std::allocator<inode>, file_type>(std::_Sp_make_shared_tag, inode*, std::allocator<inode> const&, file_type&&) (shared_ptr_base.h:635)
==4352==    by 0x40D323: std::__shared_ptr<inode, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<inode>, file_type>(std::_Sp_make_shared_tag, std::allocator<inode> const&, file_type&&) (shared_ptr_base.h:1295)
==4352==    by 0x40C894: std::shared_ptr<inode>::shared_ptr<std::allocator<inode>, file_type>(std::_Sp_make_shared_tag, std::allocator<inode> const&, file_type&&) (shared_ptr.h:344)
==4352==    by 0x40B736: std::shared_ptr<inode> std::allocate_shared<inode, std::allocator<inode>, file_type>(std::allocator<inode> const&, file_type&&) (shared_ptr.h:691)
==4352==    by 0x409F60: std::shared_ptr<inode> std::make_shared<inode, file_type>(file_type&&) (shared_ptr.h:707)
==4352==    by 0x4101BA: inode_state::inode_state() (file_sys.cpp:32)
==4352==    by 0x417E19: main (main.cpp:50)
==4352== 
==4352== LEAK SUMMARY:
==4352==    definitely lost: 48 bytes in 1 blocks
==4352==    indirectly lost: 1,430 bytes in 32 blocks
==4352==      possibly lost: 0 bytes in 0 blocks
==4352==    still reachable: 0 bytes in 0 blocks
==4352==         suppressed: 0 bytes in 0 blocks
==4352== 
==4352== For counts of detected and suppressed errors, rerun with: -v
==4352== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
