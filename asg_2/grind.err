==30232== Memcheck, a memory error detector
==30232== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==30232== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==30232== Command: ./yshell
==30232== 
yshell: Bad: no such function
yshell: #: no such function
yshell: #: no such function
yshell: #: no such function
==30232== 
==30232== HEAP SUMMARY:
==30232==     in use at exit: 1,478 bytes in 33 blocks
==30232==   total heap usage: 294 allocs, 261 frees, 11,213 bytes allocated
==30232== 
==30232== 1,478 (48 direct, 1,430 indirect) bytes in 1 blocks are definitely lost in loss record 11 of 11
==30232==    at 0x4C2A1E3: operator new(unsigned long) (vg_replace_malloc.c:334)
==30232==    by 0x40F1CA: __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<inode, std::allocator<inode>, (__gnu_cxx::_Lock_policy)2> >::allocate(unsigned long, void const*) (new_allocator.h:111)
==30232==    by 0x40ED80: std::allocator_traits<std::allocator<std::_Sp_counted_ptr_inplace<inode, std::allocator<inode>, (__gnu_cxx::_Lock_policy)2> > >::allocate(std::allocator<std::_Sp_counted_ptr_inplace<inode, std::allocator<inode>, (__gnu_cxx::_Lock_policy)2> >&, unsigned long) (alloc_traits.h:436)
==30232==    by 0x40E461: std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<inode, std::allocator<inode>, (__gnu_cxx::_Lock_policy)2> > > std::__allocate_guarded<std::allocator<std::_Sp_counted_ptr_inplace<inode, std::allocator<inode>, (__gnu_cxx::_Lock_policy)2> > >(std::allocator<std::_Sp_counted_ptr_inplace<inode, std::allocator<inode>, (__gnu_cxx::_Lock_policy)2> >&) (allocated_ptr.h:104)
==30232==    by 0x40DA05: std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<inode, std::allocator<inode>, file_type>(std::_Sp_make_shared_tag, inode*, std::allocator<inode> const&, file_type&&) (shared_ptr_base.h:635)
==30232==    by 0x40D20F: std::__shared_ptr<inode, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<inode>, file_type>(std::_Sp_make_shared_tag, std::allocator<inode> const&, file_type&&) (shared_ptr_base.h:1295)
==30232==    by 0x40C780: std::shared_ptr<inode>::shared_ptr<std::allocator<inode>, file_type>(std::_Sp_make_shared_tag, std::allocator<inode> const&, file_type&&) (shared_ptr.h:344)
==30232==    by 0x40B622: std::shared_ptr<inode> std::allocate_shared<inode, std::allocator<inode>, file_type>(std::allocator<inode> const&, file_type&&) (shared_ptr.h:691)
==30232==    by 0x409E4C: std::shared_ptr<inode> std::make_shared<inode, file_type>(file_type&&) (shared_ptr.h:707)
==30232==    by 0x4100A6: inode_state::inode_state() (file_sys.cpp:32)
==30232==    by 0x417D05: main (main.cpp:50)
==30232== 
==30232== LEAK SUMMARY:
==30232==    definitely lost: 48 bytes in 1 blocks
==30232==    indirectly lost: 1,430 bytes in 32 blocks
==30232==      possibly lost: 0 bytes in 0 blocks
==30232==    still reachable: 0 bytes in 0 blocks
==30232==         suppressed: 0 bytes in 0 blocks
==30232== 
==30232== For counts of detected and suppressed errors, rerun with: -v
==30232== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
